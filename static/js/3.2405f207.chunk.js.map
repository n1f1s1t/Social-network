{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/MyPost/MyPosts.module.css","components/Profile/MyPost/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPost/Post/Post.jsx","components/Profile/MyPost/MyPosts.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPost/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Post","className","classes","item","src","message","like","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","MyPosts","memo","postsElement","posts","map","p","createRef","myPostsBlock","values","addPost","newPostText","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","descriptionBlock","photos","large","MyPostsContainer","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","AuthRedirectComponent","withRouter","compose"],"mappings":"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","file":"static/js/3.2405f207.chunk.js","sourcesContent":["import React from 'react'; \r\nimport { Redirect } from 'react-router-dom';\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/Login\"} />;\r\n            return  <Component {...this.props} />\r\n        }\r\n    }\r\n  \r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPostsBlock\":\"MyPosts_myPostsBlock__33-90\",\"posts\":\"MyPosts_posts__3SAoW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__Il_y1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__izYgt\"};","import React from 'react';\r\nimport classes from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n  return (\r\n    <div className={classes.item}>\r\n      <img src=\"https://images.theconversation.com/files/301743/original/file-20191114-26207-lray93.jpg?ixlib=rb-1.1.0&q=45&auto=format&w=926&fit=clip\" />\r\n       {props.message}\r\n      <div>\r\n        <span>{props.like} like</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport classes from './MyPosts.module.css'\r\nimport Post from './Post/Post'\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required, maxLengthCreator } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../Common/FormsControl/FormsControl';\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst addPostForm = (props) => {\r\n  return <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field name=\"newPostText\" component={Textarea} placeholder={\"Post message\"} \r\n        validate={[required, maxLength10]} />\r\n      </div>\r\n      <div>\r\n        <button>Add Post</button>\r\n      </div>\r\n    </form>\r\n}\r\n\r\nconst AddNewPostFormRedux  = reduxForm({form: \"ProfileAddNewPostForm\"})(addPostForm)\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n  let postsElement = props.posts.map(p => <Post message={p.message} like={p.like} />)\r\n\r\n  let newPostElement = React.createRef()\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.myPostsBlock}>\r\n      <h3>My Post</h3>\r\n      <AddNewPostFormRedux  onSubmit={onAddPost} />\r\n      <div className={classes.posts}>\r\n        {postsElement}\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {   \r\n        setStatus(props.status)}, [props.status]\r\n    )\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>{props.status || \"-----\"}</span>\r\n            </div>}\r\n            {editMode &&\r\n            <div>\r\n                 <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} />\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport Preloader from '../../Common/Preloader/preloader';\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\"\r\n\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus}) => {\r\n  if(!profile) { return <Preloader/> }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <img src='https://opt-1313496.ssl.1c-bitrix-cdn.ru/upload/medialibrary/%D0%90%D0%BD%D0%B4%D1%80%D0%B5%D0%B9-%D0%91%D0%B5%D0%BB%D0%B0%D0%B2%D0%B8%D0%BD.jpg'></img>\r\n      </div>\r\n      <div className={classes.descriptionBlock}>\r\n        <img src={profile.photos.large}></img>\r\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport { addPostActionCreator } from '../../../Redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText))\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect (mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport classes from './Profile.module.css';\r\nimport MyPosts from './MyPost/MyPosts';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPost/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n\r\n  return (\r\n    <div>\r\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n      <MyPostsContainer  />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getStatus, updateStatus } from '../../Redux/profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if(!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\")\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n    \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus} />\r\n    )\r\n  }\r\n};\r\n\r\nlet AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\n\r\nlet WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\r\n\r\nexport default compose(connect(mapStateToProps, {getUserProfile, getStatus, updateStatus}), withRouter)(ProfileContainer);\r\n"],"sourceRoot":""}