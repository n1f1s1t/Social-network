{"version":3,"sources":["components/Dialogs/Dialogs.module.css","hoc/withAuthRedirect.js","components/Dialogs/DialogItem/DialogsItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","DialogItem","className","classes","dialog","active","id","name","Message","message","maxLength50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","dialogsPage","dialogsElements","dialogs","map","d","key","messageElements","messages","m","newMessageBody","dialogsItems","values","sendMessage","compose","dispatch","sendMessageCreator"],"mappings":"iGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,+ICG9KC,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAe,IACtCC,EADqC,iLAGnC,OAAKC,KAAKC,MAAMN,OACR,kBAACG,EAAcE,KAAKC,OADG,kBAAC,IAAD,CAAUC,GAAI,eAHV,GACXC,IAAML,WAStC,OAFqCM,YAAQX,EAARW,CAAoCL,K,+FCJ9DM,EARI,SAACJ,GAChB,OACI,yBAAKK,UAAWC,IAAQC,OAAS,IAAKD,IAAQE,QAClC,kBAAC,IAAD,CAASP,GAAI,YAAcD,EAAMS,IAAKT,EAAMU,QCEjDC,EANC,SAACX,GACb,OACI,yBAAKK,UAAWC,IAAQM,SAAUZ,EAAMY,U,kCC8B1CC,EAAcC,YAAiB,IAa/BC,EAAsBC,YAAU,CAACC,KAAM,yBAAjBD,EAXL,SAAChB,GACpB,OACI,0BAAMkB,SAAUlB,EAAMmB,cAClB,6BACI,kBAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUC,SAAU,CAACC,IAAUX,GAAcH,KAAK,iBAAiBe,YAAY,wBAErG,6BAAK,6CAOFC,EAzCC,SAAC1B,GAEb,IAAIP,EAAQO,EAAM2B,YAEdC,EAAkBnC,EAAMoC,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAYtB,GAAIsB,EAAEtB,GAAIuB,IAAKD,EAAEtB,GAAIC,KAAMqB,EAAErB,UAClFuB,EAAkBxC,EAAMyC,SAASJ,KAAI,SAAAK,GAAC,OAAI,kBAAC,EAAD,CAASH,IAAKG,EAAE1B,GAAIG,QAASuB,EAAEvB,aACxDnB,EAAM2C,eAO3B,OACI,yBAAK/B,UAAWC,IAAQuB,SACpB,yBAAKxB,UAAWC,IAAQ+B,cACnBT,GAEL,yBAAKvB,UAAWC,IAAQ4B,UACpB,6BAAMD,IAEV,kBAAClB,EAAD,CAAqBG,SAbT,SAACoB,GACjBtC,EAAMuC,YAAYD,EAAOF,qB,wBCKlBI,sBAAQrC,aAfD,SAACV,GACnB,MAAO,CACHkC,YAAalC,EAAMkC,gBAIF,SAACc,GACtB,MAAO,CACHF,YAAa,SAACH,GACVK,EAASC,YAAmBN,SAM6BxC,IAAtD4C,CAAwEd","file":"static/js/4.7901db21.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1PLUu\",\"dialogsItems\":\"Dialogs_dialogsItems__3fvyL\",\"active\":\"Dialogs_active__3GRFY\",\"messages\":\"Dialogs_messages__VRdJe\",\"message\":\"Dialogs_message__LKonA\"};","import React from 'react'; \r\nimport { Redirect } from 'react-router-dom';\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/Login\"} />;\r\n            return  <Component {...this.props} />\r\n        }\r\n    }\r\n  \r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import React from 'react'; \r\nimport classes from './../Dialogs.module.css';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={classes.dialog + \" \" +classes.active}>\r\n                    <NavLink to={'/Dialogs/' + props.id}>{props.name}</NavLink>\r\n                </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react'; \r\nimport classes from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={classes.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from 'react'; \r\nimport classes from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogsItem';\r\nimport Message from './Message/Message';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { Textarea } from '../Common/FormsControl/FormsControl';\r\nimport { required, maxLengthCreator } from '../../utils/validators/validators';\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem id={d.id} key={d.id} name={d.name} />);\r\n    let messageElements = state.messages.map(m => <Message key={m.id} message={m.message} />);\r\n    let newMessageBody = state.newMessageBody;\r\n    \r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={classes.dialogs}>\r\n            <div className={classes.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={classes.messages}>\r\n                <div>{messageElements}</div>\r\n            </div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage} />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field component={Textarea} validate={[required, maxLength50]} name=\"newMessageBody\" placeholder=\"Enter your message\" />\r\n            </div>\r\n            <div><button>Send</button></div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogsAddMessageForm\"})(AddMessageForm)\r\n\r\nexport default Dialogs;","import React from 'react'; \r\nimport { sendMessageCreator } from '../../Redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs);"],"sourceRoot":""}