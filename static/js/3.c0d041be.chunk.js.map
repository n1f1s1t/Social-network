{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPost/MyPosts.module.css","components/Profile/MyPost/Post/Post.module.css","components/Profile/MyPost/Post/Post.jsx","components/Profile/MyPost/MyPosts.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPost/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Post","className","classes","item","src","message","like","maxLength10","maxLengthCreator","AddNewPostFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","name","component","Textarea","placeholder","validate","required","MyPosts","memo","postsElement","posts","map","p","createRef","myPostsBlock","values","addPost","newPostText","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileDataFormReduxForm","profile","createField","Input","type","Object","keys","contacts","key","contact","ProfileData","isOwner","activateEditMode","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","contactTitle","contactValue","Contact","ProfileInfo","savePhoto","saveProfile","wallpaper","descriptionBlock","photos","large","userPhoto","mainPhoto","target","files","length","initialValues","formData","then","MyPostsContainer","profilePage","dispatch","addPostActionCreator","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","AuthRedirectComponent","withRouter","compose"],"mappings":"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","file":"static/js/3.c0d041be.chunk.js","sourcesContent":["import React from 'react'; \r\nimport { Redirect } from 'react-router-dom';\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={\"/Login\"} />;\r\n            return  <Component {...this.props} />\r\n        }\r\n    }\r\n  \r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wallpaper\":\"ProfileInfo_wallpaper__2HvTB\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__izYgt\",\"mainPhoto\":\"ProfileInfo_mainPhoto__2kG8b\",\"contact\":\"ProfileInfo_contact__3vkMz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"myPostsBlock\":\"MyPosts_myPostsBlock__33-90\",\"posts\":\"MyPosts_posts__3SAoW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__Il_y1\"};","import React from 'react';\r\nimport classes from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n  return (\r\n    <div className={classes.item}>\r\n      <img src=\"https://images.theconversation.com/files/301743/original/file-20191114-26207-lray93.jpg?ixlib=rb-1.1.0&q=45&auto=format&w=926&fit=clip\" />\r\n       {props.message}\r\n      <div>\r\n        <span>{props.like} like</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport classes from './MyPosts.module.css'\r\nimport Post from './Post/Post'\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required, maxLengthCreator } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../Common/FormsControl/FormsControl';\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst addPostForm = (props) => {\r\n  return <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field name=\"newPostText\" component={Textarea} placeholder={\"Post message\"} \r\n        validate={[required, maxLength10]} />\r\n      </div>\r\n      <div>\r\n        <button>Add Post</button>\r\n      </div>\r\n    </form>\r\n}\r\n\r\nconst AddNewPostFormRedux  = reduxForm({form: \"ProfileAddNewPostForm\"})(addPostForm)\r\n\r\nconst MyPosts = React.memo(props => {\r\n\r\n  let postsElement = props.posts.map(p => <Post message={p.message} like={p.like} />)\r\n\r\n  let newPostElement = React.createRef()\r\n\r\n  let onAddPost = (values) => {\r\n    props.addPost(values.newPostText)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.myPostsBlock}>\r\n      <h3>My Post</h3>\r\n      <AddNewPostFormRedux  onSubmit={onAddPost} />\r\n      <div className={classes.posts}>\r\n        {postsElement}\r\n      </div>\r\n    </div>\r\n  )\r\n})\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {   \r\n        setStatus(props.status)}, [props.status]\r\n    )\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <b>Status: </b> <span onDoubleClick={activateEditMode}>{props.status || \"-----\"}</span>\r\n            </div>}\r\n            {editMode &&\r\n            <div>\r\n                 <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} />\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport { createField, Input, Textarea } from '../../Common/FormsControl/FormsControl';\r\nimport { reduxForm } from 'redux-form';\r\nimport classes from './ProfileInfo.module.css';\r\n\r\nconst ProfileDataForm = ({ profile, handleSubmit }) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n          <div><button>Save</button></div>\r\n          <div>\r\n            <b>Full name: </b> {createField(\"Full name\", \"fullName\", [], Input)} \r\n          </div>\r\n          <div>\r\n          <b>Looking for a job: </b> {createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"} )}\r\n          </div>\r\n          <div>\r\n            <b>Scills: </b> {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n          </div>\r\n          <div>\r\n            <b>About me: </b> {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n          </div>\r\n          <div>\r\n            <b>Contact: </b> {Object.keys(profile.contacts).map(key => {\r\n            return <div key={key} className={classes.contact}>\r\n            <b>{key}: {createField(key, \"contacts.\" + key, [], Input)}</b>\r\n            </div>\r\n            })}\r\n          </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormReduxForm;","import React, { useState } from 'react';\r\nimport classes from './ProfileInfo.module.css';\r\nimport Preloader from '../../Common/Preloader/preloader';\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\"\r\nimport ProfileDataForm from './ProfileDataForm';\r\nimport userPhoto from './../../../assets/images/user_image.png'\r\n\r\n\r\nconst ProfileInfo = ({ profile, status, updateStatus, isOwner, savePhoto, saveProfile  }) => {\r\n\r\n  let [editMode, setEditMode] = useState(false);\r\n\r\n  if (!profile) { return <Preloader /> }\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n        savePhoto(e.target.files[0]);\r\n    }\r\n  }\r\n\r\n  const onSubmit = (formData) => {\r\n    saveProfile(formData).then(\r\n        () => {\r\n            setEditMode(false);\r\n        }\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <img src='https://opt-1313496.ssl.1c-bitrix-cdn.ru/upload/medialibrary/%D0%90%D0%BD%D0%B4%D1%80%D0%B5%D0%B9-%D0%91%D0%B5%D0%BB%D0%B0%D0%B2%D0%B8%D0%BD.jpg' className={classes.wallpaper}></img>\r\n      </div>\r\n      <div className={classes.descriptionBlock}>\r\n        <img src={profile.photos.large || userPhoto} className={classes.mainPhoto}/>\r\n        { isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />}\r\n        {editMode \r\n        ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit} />\r\n        : <ProfileData profile={profile} isOwner={isOwner} activateEditMode={() => {setEditMode(true) }}/>}\r\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst ProfileData = ({profile, isOwner, activateEditMode}) => {\r\n  return <div>\r\n          {isOwner && <div><button onClick={activateEditMode}>Edit</button></div>}\r\n          <div>\r\n            <b>Full name: </b> {profile.fullName}\r\n          </div>\r\n          <div>\r\n            <b>Looking for a job: </b> {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n          </div>\r\n          { profile.lookingForAJob &&\r\n          <div>\r\n            <b>Scills: </b> {profile.lookingForAJobDescription}\r\n          </div>\r\n          }\r\n          <div>\r\n            <b>About me: </b> {profile.aboutMe}\r\n          </div>\r\n          <div>\r\n            <b>Contact: </b> { Object.keys(profile.contacts).map(key => {\r\n              return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]} />\r\n            })}\r\n          </div>\r\n        </div>\r\n}\r\n\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n  return <div className={classes.contact}><b>{contactTitle}</b>: {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport { addPostActionCreator } from '../../../Redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profilePage.posts,\r\n    newPostText: state.profilePage.newPostText\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addPost: (newPostText) => {\r\n      dispatch(addPostActionCreator(newPostText))\r\n    }\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect (mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport classes from './Profile.module.css';\r\nimport MyPosts from './MyPost/MyPosts';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport MyPostsContainer from './MyPost/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n\r\n  return (\r\n    <div>\r\n      <ProfileInfo\r\n        savePhoto={props.savePhoto}\r\n        isOwner={props.isOwner}\r\n        profile={props.profile}\r\n        status={props.status}\r\n        saveProfile={props.saveProfile}\r\n        updateStatus={props.updateStatus} />\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile } from '../../Redux/profile-reducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  refreshProfile(){\r\n    let userId = this.props.match.params.userId;\r\n    if(!userId) {\r\n      userId = this.props.authorizedUserId;\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\")\r\n      }\r\n    }\r\n    this.props.getUserProfile(userId);\r\n    this.props.getStatus(userId);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile()\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot){\r\n    if (this.props.match.params.userId != prevProps.match.params.userId ) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile {...this.props} \r\n        isOwner={!this.props.match.params.userId} \r\n        profile={this.props.profile} \r\n        status={this.props.status} \r\n        updateStatus={this.props.updateStatus} \r\n        savePhoto={this.props.savePhoto}/>\r\n    )\r\n  }\r\n};\r\n\r\nlet AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  authorizedUserId: state.auth.userId,\r\n  isAuth: state.auth.isAuth\r\n});\r\n\r\n\r\nlet WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\r\n\r\nexport default compose(connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}), withRouter)(ProfileContainer);\r\n"],"sourceRoot":""}